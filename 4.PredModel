from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, precision_score, recall_score

# Prepare Data for Model
def prepare_data_for_model(dataframe):
    dataframe['label'] = dataframe['sentiment'].apply(lambda x: 1 if x > 0 else 0)
    features = dataframe[['sentiment', 'mention_count']]
    target = dataframe['label']
    return train_test_split(features, target, test_size=0.2, random_state=42)

# Train and Evaluate Model
def train_and_evaluate_model(X_train, X_test, y_train, y_test):
    model = RandomForestClassifier()
    model.fit(X_train, y_train)
    predictions = model.predict(X_test)
    accuracy = accuracy_score(y_test, predictions)
    precision = precision_score(y_test, predictions)
    recall = recall_score(y_test, predictions)
    return model, accuracy, precision, recall

# Example Usage:
# X_train, X_test, y_train, y_test = prepare_data_for_model(combined_data)
# model, accuracy, precision, recall = train_and_evaluate_model(X_train, X_test, y_train, y_test)
